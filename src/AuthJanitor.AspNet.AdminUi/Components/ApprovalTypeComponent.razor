<span class="@(ShowEditControls ? "lightUpHoverable" : string.Empty) text-nowrap h6">
    <ColorTitledGroupBox BackgroundColor="Background.Success" TextColor="TextColor.Light" Title="Run as Admin" CssClass="mx-1">
        <ApprovalTypeButtonComponent IsDisabled="@(!ShowEditControls)"
                                     Description="Administrator Signs Off Just-in-Time"
                                     Icon="@FontAwesomeIcons.Stopwatch"
                                     IsSelected="@Value.HasFlag(TaskConfirmationStrategies.AdminSignsOffJustInTime)"
                                     IsSelectedChanged="@((v) => UpdateValue(TaskConfirmationStrategies.AdminSignsOffJustInTime, v))" />

        <ApprovalTypeButtonComponent IsDisabled="@(!ShowEditControls)"
                                     Description="Administrator Caches Access Token for an Availability Schedule"
                                     Icon="@FontAwesomeIcons.CalendarAlt"
                                     IsSelected="@Value.HasFlag(TaskConfirmationStrategies.AdminCachesSignOff)"
                                     IsSelectedChanged="@((v) => UpdateValue(TaskConfirmationStrategies.AdminCachesSignOff, v))" />
    </ColorTitledGroupBox>

    <ColorTitledGroupBox BackgroundColor="Background.Warning" TextColor="TextColor.Dark" Title="Run as Agent" CssClass="mx-1">
        <ApprovalTypeButtonComponent IsDisabled="@(!ShowEditControls)"
                                     Description="AuthJanitor Agent Automatically Rekeys Just-in-Time"
                                     Icon="@FontAwesomeIcons.Stopwatch"
                                     IsSelected="@Value.HasFlag(TaskConfirmationStrategies.AutomaticRekeyingAsNeeded)"
                                     IsSelectedChanged="@((v) => UpdateValue(TaskConfirmationStrategies.AutomaticRekeyingAsNeeded, v))" />

        <ApprovalTypeButtonComponent IsDisabled="@(!ShowEditControls)"
                                     Description="AuthJanitor Agent Automatically Rekeys on an Availability Schedule"
                                     Icon="@FontAwesomeIcons.CalendarAlt"
                                     IsSelected="@Value.HasFlag(TaskConfirmationStrategies.AutomaticRekeyingScheduled)"
                                     IsSelectedChanged="@((v) => UpdateValue(TaskConfirmationStrategies.AutomaticRekeyingScheduled, v))" />

        <ApprovalTypeButtonComponent IsDisabled="@(!ShowEditControls)"
                                     Description="AuthJanitor Agent Automatically Rekeys at an External Signal"
                                     Icon="@FontAwesomeIcons.Flag"
                                     IsSelected="@Value.HasFlag(TaskConfirmationStrategies.ExternalSignal)"
                                     IsSelectedChanged="@((v) => UpdateValue(TaskConfirmationStrategies.ExternalSignal, v))" />
    </ColorTitledGroupBox>
</span>

@code {
    [Parameter] public TaskConfirmationStrategies Value { get; set; }
    [Parameter] public EventCallback<TaskConfirmationStrategies> ValueChanged { get; set; }

    [Parameter]
    public bool ShowEditControls { get; set; } = false;

    protected void UpdateValue(TaskConfirmationStrategies flag, bool isSelected)
    {
        if (Value.HasFlag(flag) && !isSelected)
            Value &= ~flag;
        else if (!Value.HasFlag(flag) && isSelected)
            Value |= flag;
        ValueChanged.InvokeAsync(Value);
        StateHasChanged();
    }
}
