<Button title="@Description"
        Disabled="@IsDisabled" Color="Color.None" Margin="Margin.Is0.OnAll" Padding="Padding.Is1.OnAll"
        Class="@CssClasses"
        Clicked="@ChangeValue">
    <Icon Name="@Icon" IconStyle="IconStyle.Solid" />
</Button>

@code {
    [Parameter]
    public bool IsDisabled { get; set; }

    [Parameter]
    public EventCallback<bool> IsDisabledChanged { get; set; }

    [Parameter]
    public bool IsSelected { get; set; }

    [Parameter]
    public EventCallback<bool> IsSelectedChanged { get; set; }

    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public string Description { get; set; }

    [Parameter]
    public string SelectedCssClasses { get; set; } = "bg-warning";

    [Parameter]
    public string NotSelectedCssClasses { get; set; } = "";


    private string CssClasses => (IsSelected ? SelectedCssClasses : NotSelectedCssClasses) + " iconLit";

    protected void ChangeValue()
    {
        IsSelected = !IsSelected;
        IsSelectedChanged.InvokeAsync(IsSelected);
    }
}